<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="lizun.mappers.OrderMapper">

    <select id="isOrderExist" resultType="lizun.model.Order">
        select *
        from "order" o

        where o.id = #{id}
          and o.id_customer = #{id_customer};
    </select>

    <resultMap id="order" type="lizun.dto.OrderDto"
               autoMapping="true">
        <result property="phone" column="phone_client"/>
        <association property="point" column="id_point" javaType="lizun.model.Point">
            <id property="id" column="id"/>
            <result property="phone" column="phone"/>
            <result property="address" column="adress"/>
        </association>
        <association property="typeOfDelivery" column="id_type"
                     javaType="lizun.model.TypeOfDelivery">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
        </association>
        <collection property="order" ofType="lizun.model.Dish" autoMapping="true">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
            <result property="price" column="price"/>
            <association property="group" column="id_group" javaType="lizun.model.TypeOfDish"
                         autoMapping="true"/>
        </collection>
        <collection property="numberOfDish" ofType="java.util.List" autoMapping="true">

        </collection>
    </resultMap>
    <select id="insertNewOrder" resultType="java.lang.Integer">
        insert into "order"(id_customer, id_type, id_point)
        values(#{customerId},#{type.id} ,#{point.id});

        <foreach collection="order" index="indexO" item="order" separator="">

            insert into order_dish (id_order) values
            (
            currval(pg_get_serial_sequence('order', 'id'))
            )
            ;
            update order_dish set
            id_dish=${order.id}
            where id_order= currval(pg_get_serial_sequence('order', 'id')) and id_dish is null ;
            <foreach collection="count" index="indexC" item="count" separator="">

                update order_dish set
                count=${count}
                where id_order= currval(pg_get_serial_sequence('order', 'id')) and
                id_dish=${order.id} and #{indexC}=#{indexO};


            </foreach>
        </foreach>


        select id from "order" where id=currval(pg_get_serial_sequence('order', 'id'));

    </select>

    <resultMap id="orders" type="lizun.dto.OrdersDto" autoMapping="true">
        <id column="id" property="id"/>
        <result property="count" column="count"/>
        <association property="dish" column="name" javaType="lizun.model.Dish">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
            <result property="price" column="price"/>
        </association>
    </resultMap>

    <select id="findLastOrderByCustomersPhone" resultType="lizun.dto.OrdersDto">
        SELECT O.id,
               D.name     "dish.name",
               D.price    "dish.price",
               D.id_group "dish.group.id",
               gd.name    "dish.group.name",
               OD.count   "count"
        FROM "order" O
                 JOIN ORDER_DISH OD ON O.ID = OD.ID_ORDER
                 join dish D on OD.id_dish = D.id
                 join groups_dish gd on D.id_group = gd.id
        where O.id_customer = (select c.id from customer c where c.phone=#{phone});

    </select>


</mapper>
